swagger: "2.0"
info:
  version: "0.0.1"
  title: APP API
  description:
   This APP example Off REST API Oauth 2.0 with angular TDD

    All endpoints will require you to send an access_token in the header which you get from the ``/oauth/login`` endpoint
  contact:
    name: Osama Thenat
    email: osama.denat@gmail.com

# during dev, should point to your local machine
host: localhost:8081
# basePath prefixes all resource paths
basePath: /v1
#
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
#####################################################
#                        Tags                       #
#####################################################
tags:
  - name: Security
  - name: Users
#####################################################
#                        Security                   #
#####################################################
# security:
#   - accessCode:
#     - admin
#     - super_admin
#####################################################
#                       Paths                       #
#####################################################
paths:
  /oauth/login:
    x-swagger-router-controller: oauthController
    post:
      operationId: getOauthToken
      description: Used to get an access token
      tags:
        - Security
      parameters:
        - name: properties
          in: body
          schema:
            type: array
            items:
                properties:
                  username:
                    type: string
                  password:
                    type: string
                  client_id:
                    type: string
                  client_secret:
                    type: string
                  grant_type:
                    type: string
                  
          required: true
          description: the oauth properites
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              access_key:
                type: string
              token_type:
                type: string
              expires_in:
                type: string
              refresh_token:
                type: string
              scope:
                type: string
        "400":
          description: Invalid username/password supplied
  /users:
    x-swagger-router-controller: usersController
    get:
      description: Returns a list of opo users
      operationId : get
      tags:
        - Users
      security:
          - accessCode:
            - admin
      parameters:
        - $ref: "#/parameters/skipParam"
        - $ref: "#/parameters/limitParam"
     
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/User'

        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    x-swagger-router-controller: usersController
    get:
      description: Returns a single opo user
      operationId : getUser
      tags:
        - Users
      security:
          - accessCode:
            - admin
      parameters:
        - name: id
          in: path
          required: true
          description: The OPO user ID
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/User"

        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      description: Edit a single opo users status
      tags:
        - Users
      security:
          - accessCode:
            - admin
      parameters:
        - name: id
          in: path
          required: true
          description: The OPO user ID
          type: string
        - name: updates
          in: body
          schema:
            type: array
            items:
                properties:
                  suspened:
                    type: boolean
                  banned:
                    type: boolean
                  
          required: true
          description: the new properties to be set
      responses:
        "200":
          description: OK
  /me:
    get:
      description: Returns my settings or permissions
      tags:
        - Users
      responses:
        "200":
          description: Sucess
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  permissions:
                    type : object
                    properties:
                      users:
                        type: string
                      admins:
                        type: string
  /admins:
    get:
      description: Returns the admins
      tags:
        - Admins
      parameters:
        - $ref: "#/parameters/skipParam"
        - $ref: "#/parameters/limitParam"
      security:
          - accessCode:
            - super_admin
      responses:
        200:
          description: Success
          schema:
            # a pointer to a definition of a user
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Admin"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a new admin
      tags:
        - Admins
      security:
          - accessCode:
            - super_admin
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref : '#/definitions/NewAdmin'
      responses:
        200:
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /admins/{id}:
    get:
      description: Returns a single admin
      tags:
        - Admins
      parameters:
        - name: id
          in: path
          required: true
          description: The OPO admin ID
          type: string
      security:
          - accessCode:
            - super_admin
      responses:
        200:
          description: OK
          schema:
            properties:
              data:
                $ref: "#/definitions/Admin"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Edit a single OPO admin
      tags:
        - Admins
      security:
          - accessCode:
            - super_admin
      parameters:
        - name: id
          in: path
          type: string
        - name: data
          in: body
          required: true
          schema:
            $ref : '#/definitions/Admin'

      responses:
        200:
          description: OK
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


# complex objects have schema definitions
definitions:
  User:
    properties:
      id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      video_url:
        type: string
      picture_url:
        type: string
      contact_info:
        type: object
        properties:
          email:
            type: string
          mobile:
            type: string
          skype:
            type: string
      created_at:
        type: string
        format: date-time
      status:
        type: string
      suspended:
        type: boolean
      banned:
        type: boolean
  Admin:
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      type:
        type: string
        description: Can be ( admin, superadmin )
      permissions:
                type: object
                description : permission for resources ( 0 = none, 1 = read, 2 = read & write )
                properties:
                  users:
                    type: integer
                  admins:
                    type: integer
  NewAdmin:
    properties:
      name:
        type: string
      email:
        type: string
      permissions:
                type: object
                description : permission for resources ( 0 = none, 1 = read, 2 = read & write )
                properties:
                  users:
                    type: integer
                  admins:
                    type: integer

securityDefinitions:
  accessCode:
    type: oauth2
    scopes:
      admin: Grants read/write access to users, videos, companies.
      super_admin: Grants read/write access to admin scope plus the admins endpoint
    flow: password
    tokenUrl:
      /oauth/login